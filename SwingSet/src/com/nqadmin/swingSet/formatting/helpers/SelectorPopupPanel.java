/* $Id$
 *
 * Tab Spacing = 4
 *
 * Copyright (c) 2004-2005, The Pangburn Company, Prasanth R. Pasala and
 * Diego Gil
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.  Redistributions in binary
 * form must reproduce the above copyright notice, this list of conditions and
 * the following disclaimer in the documentation and/or other materials
 * provided with the distribution.  The names of its contributors may not be
 * used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */

package com.nqadmin.swingSet.formatting.helpers;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.ListModel;


/**
 *
 * @author  dags
 */
public class SelectorPopupPanel extends javax.swing.JPanel implements ActionListener {
    
    private ListModel model = null;
    
    /** Creates new form SelectorPopupPanel */
    public SelectorPopupPanel() {
        initComponents();
        ((SelectorListModel)selectorListModel1).setFilterEdit(jTextField1);
    }
    
    public SelectorPopupPanel(javax.swing.ListModel model) {
        initComponents();
        ((SelectorListModel)model).setFilterEdit(jTextField1);
        selectorList1.setModel(model);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        sSConnection1 = new com.nqadmin.swingSet.datasources.SSConnection();
        selectorListModel1 = new com.nqadmin.swingSet.formatting.helpers.SelectorListModel();
        jScrollPane1 = new javax.swing.JScrollPane();
        selectorList1 = new com.nqadmin.swingSet.formatting.helpers.SelectorList();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        FormListener formListener = new FormListener();

        sSConnection1.setDriverName("org.postgresql.Driver");
        sSConnection1.setUrl("jdbc:postgresql://localhost/mag");
        sSConnection1.setUsername("dags");
        try {
            sSConnection1.createConnection();
        }
        catch (java.lang.ClassNotFoundException nf) {
            System.out.println(nf);
        }
        catch (java.lang.Exception ex) {
            System.out.println(ex);
        }
        selectorListModel1.setDataColumn("publication_id");
        selectorListModel1.setListColumn("publication_title");
        selectorListModel1.setOrderBy("publication_title");
        selectorListModel1.setSsConnection(sSConnection1);
        selectorListModel1.setTable("publications");
        selectorListModel1.refresh();

        setLayout(new java.awt.BorderLayout());

        setBorder(new javax.swing.border.TitledBorder("Selector"));
        setFocusable(false);
        jScrollPane1.setFocusable(false);
        selectorList1.setModel(selectorListModel1);
        selectorList1.setDoubleBuffered(true);
        jScrollPane1.setViewportView(selectorList1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Selecci\u00f3n");
        add(jLabel1, java.awt.BorderLayout.NORTH);

        jTextField1.setColumns(20);
        jTextField1.addActionListener(formListener);

        add(jTextField1, java.awt.BorderLayout.SOUTH);

    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jTextField1) {
                SelectorPopupPanel.this.jTextField1ActionPerformed(evt);
            }
        }
    }//GEN-END:initComponents
    
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        
        SelectorListModel model = null;
        javax.swing.JTextField s;
        
        int j, n;

        // text to find
        String toFind      = null;
        String[] newFilter = new String[2];
        
        s= ((javax.swing.JTextField)evt.getSource());
        toFind = s.getText().toUpperCase();
        
        newFilter[0] = s.getText();
        model = (SelectorListModel)(selectorList1.getModel());
        model.setFilterText(newFilter);
        
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    public void setModel(javax.swing.ListModel model) {
        this.model = model;
        selectorList1.setModel(this.model);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JLabel jLabel1;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JTextField jTextField1;
    com.nqadmin.swingSet.datasources.SSConnection sSConnection1;
    com.nqadmin.swingSet.formatting.helpers.SelectorList selectorList1;
    com.nqadmin.swingSet.formatting.helpers.SelectorListModel selectorListModel1;
    // End of variables declaration//GEN-END:variables
    
    public static void main(String args[]) {
        // ejemplo
        javax.swing.JFrame frame = new javax.swing.JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().setLayout(new java.awt.BorderLayout());
        frame.getContentPane().add(new SelectorPopupPanel(), java.awt.BorderLayout.CENTER);
        frame.setSize(640, 480);
        frame.setVisible(true);
    }
    
    public void actionPerformed(java.awt.event.ActionEvent e) {
    }
    
    private void setFilter() {
        
        SelectorListModel model = null;
        String[] newFilter = new String[1];
        newFilter[0] = jTextField1.getText().toUpperCase();
        model = (SelectorListModel)(selectorList1.getModel());
        model.setFilterText(newFilter);
        
        this.selectorList1.setModel(this.selectorListModel1);
        this.selectorList1.repaint();
        
    }
}
