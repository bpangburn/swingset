/*
 * SSFormattedTextFieldCustomizer.java
 *
 * Created on 19 de enero de 2005, 19:47
 */

package com.nqadmin.swingSet.formatting;

import com.nqadmin.swingSet.SSDataNavigator;
import com.nqadmin.swingSet.datasources.SSRowSet;
import java.awt.Dimension;
import java.awt.event.TextListener;
import java.beans.Customizer;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.swing.JComboBox;


/**
 * @author dags
 */
public class SSFormattedTextFieldCustomizer extends javax.swing.JPanel implements Customizer, TextListener {
    
    private PropertyChangeSupport support = new PropertyChangeSupport(this);
    private SSFormattedTextField ftf = null;
    
    /** Creates new customizer SSFormattedTextFieldCustomizer */
    public SSFormattedTextFieldCustomizer() {
        super();
        initComponents();

    }
    
    public Dimension preferredSize() {
        return new Dimension(400, 152);
    }
    
    
    public void addPropertyChangeListener(PropertyChangeListener l) {
        support.addPropertyChangeListener(l);
    }
    
    public void removePropertyChangeListener(PropertyChangeListener l) {
        support.removePropertyChangeListener(l);
    }
    
    public void setObject(Object bean) {
        
        SSDataNavigator dn1      = null;
        SSRowSet rs              = null;
        
        int n = 0;
        
        ftf = (SSFormattedTextField)bean;
        
        try {
            
            rs = ftf.getSSRowSet();
            
            //dn1 = ftf.getNavigator();
            
            //rs  = dn1.getRowSet();
            
            //jTextField2.setText(((SSJdbcRowSetImpl)rs).getCommand());
            
            rs.execute();
            
            jTextField1.setText("execute");
            
            n = rs.getColumnCount();
            
            jTextField1.setText("getColumnCount");
            
            //            jTextField1.setText(String.valueOf(n));
            
            for (int i = 1; i <= n; i++) {
                jComboBox3.addItem( rs.getColumnName(i));
            }
        } catch (java.sql.SQLException se) {
            jTextField1.setText("SQLException");
            se.printStackTrace();
        } catch (java.lang.NullPointerException np) {
            //jTextField1.setText("NullPointerException");
            np.printStackTrace();
        } catch (java.lang.Exception ex) {
            jTextField1.setText("Exception");
            ex.printStackTrace();
        } finally {
            jTextField2.setText(ftf.getColumnName());
        }
        
        
    }

    public void textValueChanged(java.awt.event.TextEvent e) {
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();

        FormListener formListener = new FormListener();

        setLayout(new java.awt.BorderLayout(2, 2));

        setMaximumSize(new java.awt.Dimension(400, 152));
        setMinimumSize(new java.awt.Dimension(400, 152));
        setName("SSFormattedTextField Customizer");
        jPanel1.setLayout(null);

        jPanel1.setMaximumSize(new java.awt.Dimension(400, 152));
        jPanel1.setMinimumSize(new java.awt.Dimension(400, 152));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("SSDataNavigator : ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 20, 130, 20);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("SSRowSet : ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 50, 120, 20);

        jComboBox1.setEditable(true);
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(160, 20, 200, 20);

        jComboBox2.setEditable(true);
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(160, 50, 200, 20);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Column Name : ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 80, 120, 20);

        jComboBox3.setEditable(true);
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<none>", "account_id", "account_name", "currency_id", "instructions" }));
        jComboBox3.addActionListener(formListener);

        jPanel1.add(jComboBox3);
        jComboBox3.setBounds(160, 80, 200, 20);

        jTextField1.addKeyListener(formListener);

        jPanel1.add(jTextField1);
        jTextField1.setBounds(160, 110, 90, 19);

        jTextField2.setText("jTextField2");
        jPanel1.add(jTextField2);
        jTextField2.setBounds(260, 110, 100, 19);

        jCheckBox1.setText("jCheckBox1");
        jPanel1.add(jCheckBox1);
        jCheckBox1.setBounds(30, 110, 98, 23);

        add(jPanel1, java.awt.BorderLayout.CENTER);

    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jComboBox3) {
                SSFormattedTextFieldCustomizer.this.jComboBox3ActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == jTextField1) {
                SSFormattedTextFieldCustomizer.this.jTextField1KeyReleased(evt);
            }
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }
    }//GEN-END:initComponents

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        
        JComboBox s = (JComboBox)(evt.getSource());
        
        String colName = null;
        String oldName = null;
        
        oldName = ftf.getColumnName();
        colName = ((String)(s.getSelectedItem()));
        
        ftf.setColumnName(colName);
        support.firePropertyChange("columnName", oldName, colName);
        
    }//GEN-LAST:event_jComboBox3ActionPerformed
    
    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        ftf.setColumnName(jTextField1.getText());
        firePropertyChange("columnName", null, jTextField1.getText());
        
    }//GEN-LAST:event_jTextField1KeyReleased
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JCheckBox jCheckBox1;
    javax.swing.JComboBox jComboBox1;
    javax.swing.JComboBox jComboBox2;
    javax.swing.JComboBox jComboBox3;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JPanel jPanel1;
    javax.swing.JTextField jTextField1;
    javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
    
}
